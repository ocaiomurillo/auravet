
services:
  db:
    image: postgres:16
    container_name: auravet-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-auravet}
      POSTGRES_USER: ${POSTGRES_USER:-auravet}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-auravet}
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - auravet-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-auravet}']
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ../..
      dockerfile: apps/api/Dockerfile
    container_name: auravet-api
    env_file:
      - ../../.env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-auravet}:${POSTGRES_PASSWORD:-auravet}@db:5432/${POSTGRES_DB:-auravet}?schema=public
      API_HOST: 0.0.0.0
      API_PORT: ${API_PORT:-4000}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:5173}
    ports:
      - '${API_PORT:-4000}:4000'
    depends_on:
      db:
        condition: service_healthy

  web:
    build:
      context: ../..
      dockerfile: apps/web/Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost:4000}
    container_name: auravet-web
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:4000}
    ports:
      - '${WEB_PORT:-5173}:80'
    depends_on:
      - api

volumes:
  auravet-db-data:
